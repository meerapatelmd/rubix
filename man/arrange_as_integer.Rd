% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/arrange_.R, R/deprecated.R
\name{arrange_int}
\alias{arrange_int}
\alias{arrange_num}
\alias{arrange_dbl}
\alias{arrange_as_integer}
\title{Arrange by a Given Column as Integer}
\usage{
arrange_int(data, col, desc = FALSE)

arrange_num(data, col, desc = FALSE)

arrange_dbl(data, col, desc = FALSE)

arrange_as_integer(.data, column, desc = FALSE)

arrange_as_integer(.data, column, desc = FALSE)
}
\arguments{
\item{data}{A dataframe or tibble.}

\item{col}{Target column.}

\item{desc}{PARAM_DESCRIPTION, Default: FALSE}

\item{.data}{PARAM_DESCRIPTION}

\item{column}{PARAM_DESCRIPTION}
}
\value{
OUTPUT_DESCRIPTION

OUTPUT_DESCRIPTION

OUTPUT_DESCRIPTION

OUTPUT_DESCRIPTION
}
\description{
(Deprecated) Perform an arrange function call on a dataframe with the values of the target column as an integer class.

(Deprecated) Perform an arrange function call on a dataframe with the values of the target column as an integer class.

Perform an arrange function call on a dataframe with the values of the target column as an integer class.

(Deprecated) Perform an arrange function call on a dataframe with the values of the target column as an integer class.
}
\details{
DETAILS

DETAILS

DETAILS

DETAILS
}
\examples{
# Load Data  
data("mtcars")

arrange_int(mtcars, col = carb) \%>\%
        head()
arrange_int(mtcars, col = carb, desc = TRUE) \%>\%
        head()


mtcars \%>\%
mutate_all(as.character) \%>\%
arrange_int(carb)
\dontrun{
if(interactive()){
 #EXAMPLE1
 }
}
\dontrun{
if(interactive()){
 #EXAMPLE1
 }
}
\dontrun{
if(interactive()){
 #EXAMPLE1
 }
}
\dontrun{
if(interactive()){
 #EXAMPLE1
 }
}
}
\seealso{
\code{\link[dplyr]{tidyeval-compat}},\code{\link[dplyr]{arrange}}

\code{\link[dplyr]{tidyeval-compat}},\code{\link[dplyr]{arrange}}

\code{\link[dplyr]{tidyeval-compat}},\code{\link[dplyr]{arrange}}

\code{\link[dplyr]{tidyeval-compat}},\code{\link[dplyr]{arrange}}
}
